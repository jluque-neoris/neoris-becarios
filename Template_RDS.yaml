AWSTemplateFormatVersion: '2010-09-09'
Description: YAML template for AWS

Parameters:
  # References to the existing resources in AWS 
  VPC:
    Type: AWS::EC2::VPC::Id
    Default: vpc-03fdd3b33e6bc9591
    Description: ID of Jaime's VPC where I will locate my resources
  PublicSubnet1A:
    Type: AWS::EC2::Subnet::Id
    Default: subnet-05a69f75c7584847b
    Description: ID of the public subnet in eu-west-1a AZ instance
  PrivateSubnet1A:
    Type: AWS::EC2::Subnet::Id
    Default: subnet-044785eec793f6c06
    Description: ID of the private subnet in eu-west-1a AZ
  IsolatedSubnet1A:
    Type: AWS::EC2::Subnet::Id
    Default: subnet-001a928f428730716
    Description: ID of the isolated subnet in eu-west-1a AZ
  AvailabilityZone1A:
    Type: String # Not sure about this field
    Default: eu-west-1a
    Description: Availability zone where I want to locate my resources
  PublicSubnet1B:
    Type: AWS::EC2::Subnet::Id
    Default: subnet-0b2f22ba72d34584b
    Description: ID of the public subnet in eu-west-1b AZ instance
  PrivateSubnet1B:
    Type: AWS::EC2::Subnet::Id
    Default: subnet-000083b09eae1f329
    Description: ID of the private subnet in eu-west-1b AZ
  IsolatedSubnet1B:
    Type: AWS::EC2::Subnet::Id
    Default: subnet-0d5c2702c3509096a
    Description: ID of the isolated subnet in eu-west-1b AZ
  AvailabilityZone1B:
    Type: String # Not sure about this field
    Default: eu-west-1b
    Description: Second availability zone where I want to locate my resources
  OwnerTagName:
    Type: String # Not sure about this field
    Default: Alfredo_Cuadrado
    Description: Tag to identify the resources that I have created
  MyIP:
    Type: String # Not sure about this field
    Default: 87.221.26.110/32
    Description: My public IP address
Resources:
  # New resources for the VPC
  SecurityGroup1A:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: srs-cloud-sandbox-aca-sg-ec2-1a
      GroupDescription: Security group for my EC2 instance in 1A public subnet
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22' # Port 22 for SSH protocol
          ToPort: '22'
          CidrIp: !Ref MyIP
        - IpProtocol: tcp
          FromPort: '80' # Port 80 for HTTP protocol
          ToPort: '80'
          CidrIp: !Ref MyIP
      Tags:
        - Key: owner
          Value: !Ref OwnerTagName
  PublicEC21A:
    # EC2 for the public subnet in 1A
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0f007bf1d5c770c6e # Amazon-Linux EC2 type
      InstanceType: t2.micro
      KeyName: clavesalfredo # My key
      SubnetId: !Ref PublicSubnet1A
      AvailabilityZone: !Ref AvailabilityZone1A
      SecurityGroupIds:
        - !Ref SecurityGroup1A
      Tags:
        - Key: Owner
          Value: !Ref OwnerTagName
        - Key: Name
          Value: srs-cloud-sandbox-aca-ec2-1A
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS
      SubnetIds:
        - !Ref PrivateSubnet1A # Subred privada en AZ 1A
        - !Ref PrivateSubnet1B # Subred privada en AZ 1B
  SecurityGroupRDS:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: srs-cloud-sandbox-aca-sg-rds
      GroupDescription: Security group for RDS EC2 instance
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306' # Allows to connect with MySQL DB instance from my private subnet in 1A
          ToPort: '3306'
          CidrIp: 10.0.3.0/24
        - IpProtocol: tcp
          FromPort: '3306' # Allows to connect with MySQL DB instance from my public subnet in 1A
          ToPort: '3306'
          CidrIp: 10.0.1.0/24
      Tags:
        - Key: owner
          Value: !Ref OwnerTagName
  DBSecret:
    # We use a secret to create a password to access the DB
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Secret for MasterUserPassword in RDS instance
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admin"}'
        GenerateStringKey: password
        PasswordLength: 30 # 30 characters in the password for more security
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: Owner
          Value: !Ref OwnerTagName
        - Key: Name
          Value: srs-cloud-sandbox-aca-secret
  RDSInstance:
    # DB instance. The DB type will be MySQL with and SSD (gp3) with the minimun storage, 20 GB
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20 # Minimun storage for MySQL DB with SSD storage
      AvailabilityZone: !Ref AvailabilityZone1A
      DBInstanceClass: db.t3.micro # General propouse, minimun price per hour
      DBInstanceIdentifier: srs-cloud-sandbox-aca-rds-ec2 # Name for my RDS EC2 instance
      DBName: srs-cloud-sandbox-aca-db-mysql # Name for my RDS EC2 instance
      DBSubnetGroupName: !Ref DBSubnetGroup # It will be located in the private subnet
      Engine: mysql # MySQL as engine
      EngineVersion: 8 # AWS admits MySQL 8.0 & MySQL 5.7
      MasterUsername: admin # Standard name for master user name
      MasterUserPassword: !Ref DBSecret # We use a secret as the password for accessing the DB
      StorageType: gp3
      VPCSecurityGroups:
        - !GetAtt SecurityGroupRDS.GroupId
      Tags:
        - Key: Owner
          Value: !Ref OwnerTagName